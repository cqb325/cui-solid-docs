import type { JSXElement } from 'solid-js';
import type { TagGroupProps } from '../../TagGroup';
export * from './Option';
export * from './OptionGroup';
export interface SelectOptions {
    name?: string;
    value?: any;
    disabled?: boolean;
    size?: 'small' | 'large';
    clearable?: boolean;
    multi?: boolean;
    prefix?: any;
    style?: any;
    placeholder?: string;
    data?: Array<any>;
    textField?: string;
    valueField?: string;
    class?: any;
    classList?: any;
    filter?: boolean;
    renderOption?: (data: any) => any;
    renderSelectedItem?: (data: any) => JSXElement;
    ref?: any;
    emptyText?: string;
    emptyOption?: any;
    onChange?: (value: any, option?: any) => void;
    showMax?: TagGroupProps['max'];
    max?: number;
    status?: 'warning' | 'error';
    footer?: JSXElement;
    header?: JSXElement;
    triggerRender?: (text: string | JSXElement | any[]) => JSXElement;
    onExceed?: () => void;
    valueClosable?: boolean;
    transfer?: boolean;
    align?: 'bottomLeft' | 'bottomRight';
    showMore?: boolean;
    loading?: boolean;
    children?: any;
    remoteMethod?: (queryStr: any) => void;
    maxHeight?: number;
    debounceTime?: number;
    asFormField?: boolean;
    defaultLabel?: string | string[];
}
export declare function Select(props: SelectOptions): import("solid-js").JSX.Element;
